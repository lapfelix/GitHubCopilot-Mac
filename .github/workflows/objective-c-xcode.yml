name: Xcode Archive, Notarize, and Release

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Archive App
    runs-on: macos-latest
    env:
      TEAM_ID: ${{ secrets.TEAM_ID }}
      SCHEME: "GitHub Copilot"
      CONFIGURATION: "Release"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Xcode Path
        run: sudo xcode-select -s "$(xcode-select -p)"

      - name: Create and Unlock Keychain
        run: |
          KEYCHAIN=build.keychain
          KEYCHAIN_PASSWORD=${{ secrets.KEYCHAIN_PASSWORD }}
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN"
          security set-keychain-settings -t 3600 -l "$KEYCHAIN"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN"
          # Make the new keychain default so that codesign can find the certificates
          security list-keychains -s "$KEYCHAIN" "$(security list-keychains | sed 's/[",]//g')"
          echo "Keychain created and unlocked."
      
      - name: Import Mac Development Certificate
        run: |
          KEYCHAIN=build.keychain
          CERT_P12=certificate.p12
          echo ${{ secrets.MAC_DEVELOPMENT_CERTIFICATE_P12 }} | base64 --decode > "$CERT_P12"
          security import "$CERT_P12" -k ~/Library/Keychains/"$KEYCHAIN" -P "${{ secrets.MAC_DEVELOPMENT_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          echo "Certificate imported."
      
      - name: List Code Signing Identities
        run: |
          security find-identity -v -p codesigning

      - name: Archive the App
        run: |
          # Discover the project file (assumes one project in the root)
          PROJECT_FILE=$(find . -maxdepth 1 -name "*.xcodeproj" | head -n 1)
          if [ -z "$PROJECT_FILE" ]; then
            echo "Error: .xcodeproj not found"
            exit 1
          fi
          ARCHIVE_PATH="build/GitHub_Copilot.xcarchive"
          echo "Archiving the app using project: $PROJECT_FILE and scheme: $SCHEME"
          xcodebuild archive \
            -project "$PROJECT_FILE" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -archivePath "$ARCHIVE_PATH" \
            clean archive

      - name: Export the Archive for Developer ID
        run: |
          EXPORT_OPTIONS_PLIST="exportOptions.plist"
          cat <<EOF > ${EXPORT_OPTIONS_PLIST}
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>compileBitcode</key>
              <false/>
              <key>destination</key>
              <string>export</string>
              <key>method</key>
              <string>developer-id</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>teamID</key>
              <string>${{ env.TEAM_ID }}</string>
              <key>thinning</key>
              <string>&lt;none&gt;</string>
          </dict>
          </plist>
          EOF

          EXPORT_PATH="build/exported"
          echo "Exporting archive to: $EXPORT_PATH"
          xcodebuild -exportArchive \
            -archivePath "build/GitHub_Copilot.xcarchive" \
            -exportPath "$EXPORT_PATH" \
            -exportOptionsPlist "$EXPORT_OPTIONS_PLIST"
            
          APP_PATH=$(find "$EXPORT_PATH" -name "*.app" -print -quit)
          if [ -z "$APP_PATH" ]; then
            echo "Error: .app not found in exported archive."
            exit 1
          fi
          echo "Found exported .app at: $APP_PATH"
          
          # Package the .app into a .zip for notarization
          ZIP_FILE="GitHub_Copilot.zip"
          zip -r "$ZIP_FILE" "$APP_PATH"
          ls -l "$ZIP_FILE"
      
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: GitHub_Copilot.zip
          path: GitHub_Copilot.zip
